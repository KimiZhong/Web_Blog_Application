Web_Blog_Application
====================

This is a simple web blog application built on Ruby on Rails framework.

There are two types of users: the blog administrator and the blog users.

The blog administrator can enter new posts and comments (typically in reverse 
chronological order).

Users can visit the blog site and enter comments on particular posts.
When new comment form is submitted, the page is dynamically loaded using Ajax 
with a jQuery method fadeIn(). 

Input is validated on client and server sides to avoid attacks such as 
SQL injection, buffer overflow, cross-site scripting, etc.

Modification of posts requires the administrator with proper username and 
password for authentication. 

When a post is removed, all the comments associated are deleted as well. 


This web blog application is built based on Model-View-Controller architecture.

Model: Active Record dsign pattern - Persistent blog data and post/comment 
association is stored in Database using the Object-Relational Mapping (ORM).

Controller: Action Pack with CRUD (Create, Read, Update, Destroy) operations. 
REST (Representional State Transfer) with simple set of verbs (controller 
actions/methods) that can operate over a rich set of nouns (resources). 
Contrasted to RPC (Remote Procedure Call) such as SOAP.

View: Active View - Dynamic content generated by templates containing embedded 
Ruby (ERb) with HTML/CSS/JS/JSON using the Document Object Model (DOM).

User input data is validated on client-side (JavaScript, HTML5) and server-side
(Model-level, DB stored procedures) to avoid attacks such as SQL injection,
buffer overflow, cross-site scripting, etc.


Copyright (c) 2014 Kimi Zhong. MOOC Web Application Architectures.
Released under the MIT license. See LICENSE for details.
